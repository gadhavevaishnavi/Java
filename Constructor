// MainConstructor.java
-------------------
class MainConstructor
{
    public static void main(String args[])
    {
       Constructor c =new Constructor(20,30);
        Constructor c1 = new Constructor();

        c.display();                        //user-defined
        c1.display();                        //default
        System.out.println(c.hashCode());
        System.out.println(c1.hashCode());
        System.out.println(c.equals(c1));    // compare value - need to override
        System.out.println(c==c1);           // compare memory
        c.m1();                 // no arg
        c1.m1();               // no arg
        c.m1(10);             //int

        c1.m1(10,20,30);    //int int
        c.m1(10,20,30);

        c1.display();

        c.m1(60,50);     //int int
        c1.display();
	
        c.m1(60,50.0);       //int double
        c1.display();

        c.m1(60,50);      //int int


    }
}

_____________________________________________________
//  Constructor.java
------------------
class Constructor
{
    int a,b,c;
    void display()
    {
        System.out.println("a= " +a +" b= "+b);
    }
    Constructor(int a, int b)      //User-Defined Constructor
    {
        this.a=a;            //invoke explicitly
        this.b=b;
        System.out.println("User-Defined Constructor Called");
    }

    Constructor()               //Default Constructor
    {
        a=30;                 //invoke implicitly
        b=20;
	c=40;
        System.out.println("Default Constructor Called");
    }

    {
        System.out.println(" Instance Block Called");
    }

    static
    {
        System.out.println("Static Instance");
    }

    boolean equals(Constructor c)
    {
        if(a==c.a)
            if(b==c.b)
                return true;
        return false;

    }
void m1()
{
  System.out.println(" no argument method Called");
}
void m1(int a)
{
  System.out.println("int argunemt method called");
}
void m1(int a,int b)
{
  System.out.println("int int argunemt method called");
System.out.println(a+b);
}

void m1(int a,double b)
{
  System.out.println("int float argunemt method called");
System.out.println(a-b);
}
void m1(int a ,int b,int c)
{
  System.out.println("int int int argunemt method called");
System.out.println(a+b+c);
}

}

________________________________________________________________________________________________________________
//PROGRAM 2-
____________

//output-
/* 
Static Block
Instance Block
Default Constructor
Instance Block
User-Defined Constructor
a=20b=40
a=30b=60
a=30b=60
834600351
true
Instance Block
Default Constructor
a=0b=0
*/
______________
// ** MainObj.java

class MainObj
{
public static void main(String args[])
{
ObjCreation ob = new ObjCreation();
ObjCreation ob1 = new ObjCreation(12,23);

ob.a=20;
ob.b=40;
ob.display();           // a=20 b=40

////reference object(Access Multiple element of class)
ObjCreation ob2=ob1;           
ob1.a=30;
ob1.b=60;

ob1.display();             //ob1 & ob2 are same  i.e- a=30 b=60
ob2.display();             //a=30 b=60



System.out.println(ob1.hashCode());         //display hashcode
System.out.println(ob1.equals(ob2));        // compare 2 objects on the basis of values i.e -true

//unreferenced object (Access single element in class)
new ObjCreation().display();   //a=0 b=0

}

}

/*

new ObjCreation().a=10;
new ObjCreation().b=50;
 new ObjCreation().display(); 
System.out.println(200);        
*/

--------------------------------------

//** ObjCreation.java

class ObjCreation
{
 int a,b;
void display()
{
System.out.println("a=" +a+ "b="+b);
}

ObjCreation()
{
System.out.println("Default Constructor");
}

ObjCreation(int a,int b)
{
System.out.println("User-Defined Constructor");
}


{
System.out.println("Instance Block");
}

static
{
System.out.println("Static Block");
}

}

-----------------------

